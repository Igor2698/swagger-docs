{
  "openapi": "3.0.3",
  "info": {
    "title": "Proteus REST API",
    "description": "RESTful API for managing API keys. This documentation describes the input and output formats for working with the system.",
    "version": "1.0.0"
  },
 "servers": [
    {
      "url": "https://api.myservice.com/v1"
    }
  ],
  "tags": [
    {
      "name": "Keys",
      "description": "Operations related to API key management"
    }
  ],
  "paths": {
    "/keys": {
      "post": {
        "tags": ["Keys"],
        "summary": "Create API Keys",
        "description": "Creates one or more API keys with specified access rules.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeysRequest"
              },
              "examples": {
                "CreateKeys": {
                  "summary": "Example of a createKeys request",
                  "value": {
                    "keys": [
                      {
                        "name": "Frontend Key",
                        "description": "Used for client access",
                        "type": "free",
                        "allowedIps": [
                          "192.168.0.1"
                        ],
                        "allowedDomains": [
                          "myapp.com"
                        ],
                        "rateLimit": 100,
                        "rateLimitPeriod": "minute",
                        "creditsLimit": 100000,
                        "creditsLimitPeriod": "hour",
                        "endpoint": "Mainnet RPC"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created keys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKeysResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CreateKeysRequest": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKey"
            }
          }
        },
        "required": ["keys"]
      },
      "ApiKey": {
        "type": "object",
        "required": [
          "endpoint",
          "name",
          "rateLimit",
          "rateLimitPeriod",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["FreeRRC", "GrowthRPC","FreeGraph" , "GrowthGraph"]
          },
          "allowedIps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
    
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rateLimit": {
            "type": "integer"
          },
          "rateLimitPeriod": {
            "type": "string",
            "enum": ["minute", "hour", "day"]
          },
            "credtitsLimit": {
            "type": "integer"
          },
          "creditsLimitPeriod": {
            "type": "string",
            "enum": ["minute", "hour", "day"]
          },
          "endpoint": {
            "type": "string", 
            "enum": ["Recent-state mainnet (HTTPS)", "Recent-state mainnet (Websocket)", "Recent-state calibnet (HTTPS)", "Recent-state calibnet (Websocket)", "FVM archive mainnet", "Full archive calibnet", "Full archive mainnet", "Filecoin Graph Mainnet"]
          }
        }
      },
      "CreateKeysResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "created"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
